import{ap as i}from"./index-v6CNqsEH.js";const m=async()=>{try{console.log("🔍 Fetching appointments using REST API (like Pets)...");const t="https://ztubrfjqsckplmelezws.supabase.co",e="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp0dWJyZmpxc2NrcGxtZWxlendzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzMDQ5NjcsImV4cCI6MjA2NTg4MDk2N30.qyjJEwQKzk6t0tdSmRYZghBG1GMAE-2Y4g3obbwblr0",o=`${t}/rest/v1/appointments?select=*&order=appointment_date.asc`,n=await fetch(o,{headers:{apikey:e,Authorization:`Bearer ${e}`}});if(!n.ok)throw new Error(`Failed to fetch appointments: ${n.status} ${n.statusText}`);const r=await n.json();return console.log("✅ REST API call succeeded:",r.length),r}catch(t){console.error("❌ REST API call failed:",t);try{console.log("🔄 Trying Supabase client as fallback...");const{data:e,error:o}=await i.from("appointments").select("*").order("appointment_date",{ascending:!0});if(o)throw o;return console.log("✅ Supabase client succeeded:",(e==null?void 0:e.length)||0),e||[]}catch(e){throw console.error("❌ All methods failed:",e),e}}},u=async t=>{try{console.log(`🔍 Fetching appointments for user: ${t}`);const{data:e,error:o}=await i.from("appointments").select("*").eq("owner_id",t).order("appointment_date",{ascending:!1});if(o)throw console.error("❌ Error fetching user appointments:",o),o;return console.log(`✅ Found ${(e==null?void 0:e.length)||0} appointments for user ${t}`),e||[]}catch(e){throw console.error("❌ Failed to fetch user appointments:",e),e}},h=async t=>{var e;try{if(console.log("💾 Saving appointment to database...",t),!await l())throw new Error("Database connection test failed");let n=t.owner_id;if(!n){const{data:c,error:p}=await i.auth.getUser();if(p||!((e=c.user)!=null&&e.id))throw new Error("User not authenticated. Please log in.");n=c.user.id}const r={owner_id:n,pet_name:t.pet_name,owner_name:t.owner_name,service:t.service,appointment_date:t.appointment_date,time_slot:t.time_slot??"",status:"scheduled"},{data:s,error:a}=await i.from("appointments").insert([r]).select().single();if(a)throw console.error("❌ Error saving appointment:",a),a.code==="PGRST116"?new Error("Database table not found. Please check if the appointments table exists."):a.code==="42501"?new Error("Permission denied. Please check database policies."):new Error(`Database error: ${a.message||"Unknown error"}`);return console.log("✅ Appointment saved successfully:",s),s}catch(o){throw console.error("❌ Failed to save appointment:",o),o instanceof Error?o:new Error("Failed to save appointment to database")}},I=async(t,e)=>{try{console.log(`🔄 Updating appointment ${t} status to: ${e}`);const o="https://ztubrfjqsckplmelezws.supabase.co",n="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp0dWJyZmpxc2NrcGxtZWxlendzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzMDQ5NjcsImV4cCI6MjA2NTg4MDk2N30.qyjJEwQKzk6t0tdSmRYZghBG1GMAE-2Y4g3obbwblr0",r=`${o}/rest/v1/appointments?id=eq.${t}`,s=await fetch(r,{method:"PATCH",headers:{apikey:n,Authorization:`Bearer ${n}`,"Content-Type":"application/json",Prefer:"return=minimal"},body:JSON.stringify({status:e,updated_at:new Date().toISOString()})});if(!s.ok)throw new Error(`Failed to update appointment: ${s.status} ${s.statusText}`);return console.log("✅ Appointment status updated successfully"),!0}catch(o){throw console.error("❌ Failed to update appointment status:",o),o}},w=async(t,e)=>{try{console.log(`📝 Updating appointment ${t} notes`);const o="https://ztubrfjqsckplmelezws.supabase.co",n="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp0dWJyZmpxc2NrcGxtZWxlendzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzMDQ5NjcsImV4cCI6MjA2NTg4MDk2N30.qyjJEwQKzk6t0tdSmRYZghBG1GMAE-2Y4g3obbwblr0",r=`${o}/rest/v1/appointments?id=eq.${t}`,s=await fetch(r,{method:"PATCH",headers:{apikey:n,Authorization:`Bearer ${n}`,"Content-Type":"application/json",Prefer:"return=minimal"},body:JSON.stringify({user_notes:e,updated_at:new Date().toISOString()})});if(!s.ok)throw new Error(`Failed to update appointment notes: ${s.status} ${s.statusText}`);return console.log("✅ Appointment notes updated successfully"),!0}catch(o){throw console.error("❌ Failed to update appointment notes:",o),o}},g=async t=>{try{console.log(`🗑️ Deleting appointment ${t}`);const e="https://ztubrfjqsckplmelezws.supabase.co",o="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp0dWJyZmpxc2NrcGxtZWxlendzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzMDQ5NjcsImV4cCI6MjA2NTg4MDk2N30.qyjJEwQKzk6t0tdSmRYZghBG1GMAE-2Y4g3obbwblr0",n=`${e}/rest/v1/appointments?id=eq.${t}`,r=await fetch(n,{method:"DELETE",headers:{apikey:o,Authorization:`Bearer ${o}`,Prefer:"return=minimal"}});if(!r.ok)throw new Error(`Failed to delete appointment: ${r.status} ${r.statusText}`);return console.log("✅ Appointment deleted successfully"),!0}catch(e){throw console.error("❌ Failed to delete appointment:",e),e}},l=async()=>{try{console.log("🔍 Testing appointment database connection...");const{data:t,error:e}=await i.from("appointments").select("id").limit(1);return e?(console.error("❌ Appointment DB connection test failed:",e),console.error("Error details:",{code:e.code,message:e.message,details:e.details,hint:e.hint}),!1):(console.log("✅ Appointment DB connection test successful"),!0)}catch(t){return console.error("❌ Appointment DB connection test error:",t),!1}};export{m as a,I as b,g as d,u as g,h as s,w as u};
